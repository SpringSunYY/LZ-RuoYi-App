<template>
  <view class="${tableName}_edit_container">
    <view class="example">
      <uni-forms ref="form" :model="form" labelWidth="80px">
          #set($dictString=$dicts)
#foreach($column in $columns)
  #set($field=$column.javaField)
  #if($column.insert && !$column.pk)
      #if(($column.usableColumn) || (!$column.superColumn))
          #set($parentheseIndex=$column.columnComment.indexOf("（"))
          #if($parentheseIndex != -1)
              #set($comment=$column.columnComment.substring(0, $parentheseIndex))
          #else
              #set($comment=$column.columnComment)
          #end
          #set($dictType=$column.dictType)
          #set($dictTypeData=$dictType.substring($dictType.lastIndexOf("_")+1,$dictType.length()))
          #if($column.htmlType == "input")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <uni-easyinput v-model="form.${field}" placeholder="请输入${comment}" />
            </uni-forms-item>
          #elseif($column.htmlType == "select" && "" != $dictType)
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <uni-data-select v-model="form.${field}" :localdata="${field}SelectOptionsList"></uni-data-select>
            </uni-forms-item>
          #elseif(($column.htmlType == "radio" || $column.htmlType == "checkbox") && "" != $dictType)
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <uni-data-checkbox v-model="form.${field}" :localdata="${field}SelectOptionsList" #if($column.htmlType == "checkbox")multiple#end />
            </uni-forms-item>
          #elseif($column.htmlType == "datetime" || $column.htmlType == "date")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <uni-datetime-picker type="${column.htmlType}" v-model="form.${field}" return-type="string" />
            </uni-forms-item>
              ##  上传，文本域等
          #elseif($column.htmlType == "imageUpload")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <ImageUpload v-model="form.${field}"/>
            </uni-forms-item>
          #elseif($column.htmlType == "fileUpload")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <FileUpload v-model="form.${field}"/>
            </uni-forms-item>
          #elseif($column.htmlType == "editor")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <piaoyiEditor :values="form.${field}" @changes="${field}EditorContens" :maxlength="3000" :readOnly="false"/>
            </uni-forms-item>
          #elseif($column.htmlType == "textarea")
            <uni-forms-item label="${comment}" name="${field}" #if($column.required)required#end >
              <uni-easyinput type="textarea" v-model="form.${field}" placeholder="请输入${comment}" />
            </uni-forms-item>

          #end
      #end
  #end
#end
      </uni-forms>
      <view class="button-group">
        <button type="default" style="padding:0 3em;font-size:14px"  class="button" @click="cancel">取消</button>
        <button type="primary" style="padding:0 3em;font-size:14px"  class="button" @click="submit">提交</button>
      </view>
    </view>
  </view>
</template>

#set($editorExist=false)
#set($uploadExist=false)
#foreach($column in $columns)
    #if($column.htmlType == "editor")
        #set($editorExist=true)
    #end
    #if($column.htmlType == "imageUpload" || $column.htmlType == "fileUpload")
        #set($uploadExist=true)
    #end
#end

<script>
import { update${BusinessName},get${BusinessName},list${BusinessName} } from "@/api/${moduleName}/${businessName}";
#if($editorExist)
import piaoyiEditor from '@/components/piaoyi-editor/components/piaoyi-editor/piaoyi-editor.vue';
#end
    #if (!$dictString.isNotEmpty())
    import {getSelectDict} from "@/utils/dict";
    #end
export default {
  components: {
      #if($editorExist)
        piaoyiEditor
      #end
  },
  data() {
    return {
        #if (!$dictString.isNotEmpty())
          //字典类型筛选options
            #foreach($column in $columns)
                #set($dictType=$column.dictType)
                #set($javaField=$column.javaField)
                #if($dictType != '')
                        ${javaField}SelectOptionsList:[],
                        ${javaField}Options:"$dictType",
                #end
            #end
        #end
    form: {},
    rules: {
      #foreach($column in $columns)
          #if($column.required)
              #set($parentheseIndex=$column.columnComment.indexOf("（"))
              #if($parentheseIndex != -1)
                  #set($comment=$column.columnComment.substring(0, $parentheseIndex))
              #else
                  #set($comment=$column.columnComment)
              #end
                  $column.javaField: {
              rules: [{ required: true, errorMessage: "$comment不能为空" }]
            },
              ##                #if($foreach.count != $columns.size()),#end
          #end
      #end
      }
    }
  },
onLoad(option) {
    #if (!$dictString.isNotEmpty())
      //字典类型查询
        #foreach($column in $columns)
            #set($dictType=$column.dictType)
            #set($javaField=$column.javaField)
            #if($column.dictType != '')
              getSelectDict(this.${javaField}Options).then(response => {
                this.${javaField}SelectOptionsList = response;
              });
            #end
        #end
    #end
  //${functionName}详细
  this.get${BusinessName}Info(option.${pkColumn.javaField});
},
  onReady() {
    this.#[[$refs]]#.form.setRules(this.rules)
  },
  methods: {
    /* 获取${functionName}详情*/
    get${BusinessName}Info(${pkColumn.javaField}) {
      get${BusinessName}(${pkColumn.javaField}).then(response => {
        this.form = response.data;
      })
    },
#foreach($column in $columns)
#if($column.htmlType == "editor")
//文本编辑器
${column.javaField}EditorContens(e) {
  this.form.$column.javaField = e.html
},
#end
#end
/* 提交*/
submit() {
  this.#[[$refs]]#.form.validate().then(res => {
    update${BusinessName}(this.form).then(response => {
      this.#[[$modal]]#.msgSuccess("编辑成功")
      setTimeout(() => {
        // 返回到上一级父页面
        this.#[[$tab]]#.navigateBack();
      },500)
    })
  })
},
/* 取消*/
cancel(){
  this.$tab.navigateBack();
}
}
}
</script>

<style lang="scss">
  page {
    background-color: #ffffff;
  }

  .${tableName}_edit_container {
    .example {
      padding: 15px;
      background-color: #fff;
    }

    .button-group {
      margin-top: 15px;
      display: flex;
      justify-content: space-around;
    }
  }
</style>